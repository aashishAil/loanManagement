// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// Admin is an autogenerated mock type for the Admin type
type Admin struct {
	mock.Mock
}

type Admin_Expecter struct {
	mock *mock.Mock
}

func (_m *Admin) EXPECT() *Admin_Expecter {
	return &Admin_Expecter{mock: &_m.Mock}
}

// UpdateLoan provides a mock function with given fields: c
func (_m *Admin) UpdateLoan(c *gin.Context) {
	_m.Called(c)
}

// Admin_UpdateLoan_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateLoan'
type Admin_UpdateLoan_Call struct {
	*mock.Call
}

// UpdateLoan is a helper method to define mock.On call
//   - c *gin.Context
func (_e *Admin_Expecter) UpdateLoan(c interface{}) *Admin_UpdateLoan_Call {
	return &Admin_UpdateLoan_Call{Call: _e.mock.On("UpdateLoan", c)}
}

func (_c *Admin_UpdateLoan_Call) Run(run func(c *gin.Context)) *Admin_UpdateLoan_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *Admin_UpdateLoan_Call) Return() *Admin_UpdateLoan_Call {
	_c.Call.Return()
	return _c
}

func (_c *Admin_UpdateLoan_Call) RunAndReturn(run func(*gin.Context)) *Admin_UpdateLoan_Call {
	_c.Call.Return(run)
	return _c
}

// ViewLoan provides a mock function with given fields: c
func (_m *Admin) ViewLoan(c *gin.Context) {
	_m.Called(c)
}

// Admin_ViewLoan_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ViewLoan'
type Admin_ViewLoan_Call struct {
	*mock.Call
}

// ViewLoan is a helper method to define mock.On call
//   - c *gin.Context
func (_e *Admin_Expecter) ViewLoan(c interface{}) *Admin_ViewLoan_Call {
	return &Admin_ViewLoan_Call{Call: _e.mock.On("ViewLoan", c)}
}

func (_c *Admin_ViewLoan_Call) Run(run func(c *gin.Context)) *Admin_ViewLoan_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *Admin_ViewLoan_Call) Return() *Admin_ViewLoan_Call {
	_c.Call.Return()
	return _c
}

func (_c *Admin_ViewLoan_Call) RunAndReturn(run func(*gin.Context)) *Admin_ViewLoan_Call {
	_c.Call.Return(run)
	return _c
}

// NewAdmin creates a new instance of Admin. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAdmin(t interface {
	mock.TestingT
	Cleanup(func())
}) *Admin {
	mock := &Admin{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
